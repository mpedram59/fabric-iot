# -*- mode: ruby -*-
# vi: set ft=ruby :

# fabric-iot 分布式部署
Vagrant.configure("2") do |config|
  # 定义基础镜像
  config.vm.box = "ubuntu/xenial64"

  # 创建3个虚拟机节点
  # config.vm.network "public_network"

  # 设置vm的配置
  # 2核2G内存（默认存储10G，动态）
  config.vm.provider "virtualbox" do |v|
    v.memory = 2048
    v.cpus = 1
  end

  # 禁用默认的ssh端口映射
  config.vm.network "forwarded_port", guest: 22, host: 2222, disabled: true

  # 关闭默认共享目录
  config.vm.synced_folder ".", "/vagrant", disabled: true
  # 共享目录-bin
  config.vm.synced_folder "./sdk", "/data/sdk"
  config.vm.synced_folder "../network", "/data/network"
  config.vm.synced_folder "../chaincode", "/data/chaincode"
  # config.vm.synced_folder "../client", "/data/client"

  # 将放在./synced_folder/ssh中的公钥加入到vm
  $script = <<-'SCRIPT'
  echo 'add pub key';
  cat /data/sdk/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys;
  SCRIPT

  # 执行命令
  config.vm.provision "shell", inline: $script

  # 1个order节点
  config.vm.define :order do |order|
    # 自定义端口开放规则 127.0.0.1 -> 0.0.0.0 (外网访问)
    # 这里不需要开放桥接网络的端口（22），根据下面的 private_network:22 进行访问
    # order.vm.network "forwarded_port", guest: 22, host: 2200, id: "ssh", host_ip: "0.0.0.0"
    # 设置虚拟机名称
    order.vm.provider "virtualbox" do |v|
      v.name = "order"
    end
    # 网络
    order.vm.hostname = "order"
    order.vm.network :private_network, ip: "10.10.10.100"
  end

  # 2个peer节点（1..1）则只启动一个，（1..2）启动2个
  (1..1).each do |i|
    config.vm.define "peer#{i}" do |peer|
      # peer.vm.network "forwarded_port", guest: 22, host: "220#{i}", id: "ssh", host_ip: "0.0.0.0"
      # 名称设定
      peer.vm.provider "virtualbox" do |v|
        v.name = "peer#{i}"
      end
      # 网络
      peer.vm.hostname = "peer#{i}"
      peer.vm.network :private_network, ip: "10.10.10.10#{i}"
    end
  end

end
